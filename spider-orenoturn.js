// Generated by CoffeeScript 1.6.3
(function() {
  var Iconv, fs, iconv, jsdom, path, request;

  jsdom = require('jsdom');

  request = require('request');

  Iconv = require('iconv');

  fs = require('graceful-fs');

  path = require('path');

  iconv = new Iconv.Iconv('EUC-JP', 'UTF-8//TRANSLIT//IGNORE');

  fs.exists('images', function(exists) {
    var data;
    if (!exists) {
      fs.mkdir('images');
    }
    data = [];
    return request('http://code.jquery.com/jquery-2.0.3.min.js', function(error, response, body) {
      var jquery;
      jquery = body;
      console.log('jquery loaded');
      return request({
        uri: 'http://orenoturn.com/',
        encoding: 'binary'
      }, function(error, response, body) {
        body = new Buffer(body, 'binary');
        body = iconv.convert(body).toString();
        return jsdom.env({
          html: body,
          src: jquery,
          done: function(errors, window) {
            var pending;
            console.log('index loaded');
            pending = 0;
            return window.$('#slider p:first').nextUntil('div').filter('dt').each(function(index, category) {
              return window.$(category).nextUntil('dt').find('li a').each(function(index, subcategory) {
                pending++;
                return request({
                  uri: window.$(subcategory).attr('href'),
                  encoding: 'binary'
                }, function(error, response, body) {
                  body = new Buffer(body, 'binary');
                  body = iconv.convert(body).toString();
                  return jsdom.env({
                    html: body,
                    src: jquery,
                    done: function(errors, window) {
                      console.log(window.$(subcategory).text());
                      window.$(".product_item").each(function(index, element) {
                        var ele, file, orenoturn_id, orenoturn_image, orenoturn_image_basename, orenoturn_name;
                        ele = window.$(element);
                        orenoturn_id = parseInt(ele.find('a').attr('href').slice(5));
                        orenoturn_name = ele.find('.name a').text();
                        orenoturn_image = ele.find('a img').attr('src').replace('_th', '');
                        orenoturn_image_basename = path.basename(orenoturn_image);
                        file = "images/" + orenoturn_image_basename;
                        data.push({
                          orenoturn_id: orenoturn_id,
                          orenoturn_name: orenoturn_name,
                          orenoturn_image: orenoturn_image,
                          orenoturn_image_basename: orenoturn_image_basename
                        });
                        console.log("" + data.length + ": " + orenoturn_name);
                        return fs.stat(file, function(error, data) {
                          if (data && data.size) {
                            return console.log("" + orenoturn_name + " skipped");
                          } else {
                            return request(orenoturn_image).pipe(fs.createWriteStream(file));
                          }
                        });
                      });
                      pending--;
                      if (!pending) {
                        fs.writeFile('orenoturn.json', JSON.stringify(data, null, 2));
                        return console.log("all pages loaded");
                      }
                    }
                  });
                });
              });
            });
          }
        });
      });
    });
  });

}).call(this);

/*
//@ sourceMappingURL=spider-orenoturn.map
*/
